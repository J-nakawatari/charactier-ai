name: e2e
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/playwright:v1.44.0-jammy
    services:
      mongodb:
        image: mongo:7
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install dependencies
        run: |
          pnpm install
          cd frontend && pnpm install && cd ..
          cd backend && pnpm install && cd ..
      - name: Build
        run: cd frontend && npm run build
      - name: Lint & Type Check
        run: |
          npm run lint
          npm run type-check
      - name: Setup test data
        run: cd backend && npm run seed:ci
        env:
          MONGO_URI: mongodb://localhost:27017/test
      - name: Start backend
        env:
          MONGO_URI: mongodb://localhost:27017/test
          NODE_ENV: test
          JWT_SECRET: test-secret-key-for-ci
          JWT_REFRESH_SECRET: test-refresh-secret-key-for-ci
          FRONTEND_URL: http://localhost:3000
          DISABLE_RATE_LIMIT: true
          STRIPE_SECRET_KEY: sk_test_dummy
          STRIPE_PUBLISHABLE_KEY: pk_test_dummy
        run: |
          cd backend && npm run dev > ../backend.log 2>&1 &
          echo "Waiting for backend to start..."
          for i in {1..30}; do
            curl -fsSL http://localhost:5000/api/v1/health && echo "Backend is ready!" && break
            echo "Attempt $i/30: Backend not ready yet..."
            sleep 2
          done
          if ! curl -fsSL http://localhost:5000/api/v1/health; then
            echo "::error ::Backend did not start within 60 seconds"
            echo "=== Backend logs ==="
            cat ../backend.log
            exit 1
          fi
      
      - name: Start frontend
        env:
          NEXT_PUBLIC_API_URL: http://localhost:5000
          API_URL: http://localhost:5000
        run: |
          cd frontend && npm run start > ../frontend.log 2>&1 &
          echo "Waiting for frontend to start..."
          npx wait-on http://localhost:3000 -t 60000
          echo "Frontend is ready!"
      
      - name: Run E2E tests
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3000
          TEST_USER_EMAIL: global-test@example.com
          TEST_USER_PASSWORD: Test123!
          TEST_ADMIN_EMAIL: admin@example.com
          TEST_ADMIN_PASSWORD: admin123
        run: npm run test:e2e
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
      - name: Show logs on failure
        if: failure()
        run: |
          echo "=== Backend logs ==="
          cat backend.log || true
          echo "=== Frontend logs ==="
          cat frontend.log || true