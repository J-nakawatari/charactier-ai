name: Develop Branch Tests

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

permissions:
  contents: read
  actions: read

jobs:
  lint-and-type-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install Root Dependencies
        run: npm ci
      
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm ci
      
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci
      
      - name: Backend Lint
        working-directory: ./backend
        run: npm run lint || echo "Backend lint completed with warnings"
        continue-on-error: true
      
      - name: Frontend Lint
        working-directory: ./frontend
        run: npm run lint || echo "Frontend lint completed with warnings"
        continue-on-error: true
      
      - name: Backend Type Check
        working-directory: ./backend
        run: npx tsc --noEmit
        continue-on-error: true
      
      - name: Frontend Type Check
        working-directory: ./frontend
        run: npx tsc --noEmit
        continue-on-error: true

  quick-e2e-test:
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    env:
      LANG: ja_JP.UTF-8
      LC_ALL: ja_JP.UTF-8
    services:
      mongodb:
        image: mongo:7
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install Root Dependencies
        run: npm ci
      
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm ci
      
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci
      
      - name: Setup Test Environment
        run: |
          # テスト用環境変数
          cat > backend/.env.test << EOF
          NODE_ENV=test
          PORT=5000
          MONGODB_URI=mongodb://localhost:27017/charactier_test
          REDIS_URL=redis://localhost:6379
          JWT_SECRET=test-jwt-secret
          STRIPE_SECRET_KEY=sk_test_dummy
          OPENAI_API_KEY=sk-test-dummy
          SENDGRID_API_KEY=SG.test-dummy
          SENDGRID_FROM_EMAIL=test@example.com
          FRONTEND_URL=http://localhost:3000
          EOF
          
          cat > frontend/.env.test << EOF
          NEXT_PUBLIC_API_URL=http://localhost:5000/api/v1
          NODE_ENV=test
          EOF
      
      - name: Build Backend
        working-directory: ./backend
        run: npm run build
      
      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build
        env:
          NODE_ENV: test
      
      - name: Install Playwright
        run: npx playwright install --with-deps chromium
      
      - name: Run Critical E2E Tests
        run: |
          # バックエンドとフロントエンドを起動
          cd backend && NODE_ENV=test npm start &
          cd frontend && NODE_ENV=test npm start &
          
          # サーバーの起動を待つ
          npx wait-on http://localhost:5000/api/v1/health http://localhost:3000 -t 60000
          
          # 重要なテストのみ実行（ログイン、基本機能）
          cd ${{ github.workspace }}
          npm run test:e2e -- --grep "ログイン|基本機能" || true
        env:
          DISABLE_RATE_LIMIT: true
          NODE_ENV: test

  build-check:
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install Root Dependencies
        run: npm ci
      
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm ci
      
      - name: Install Frontend Dependencies  
        working-directory: ./frontend
        run: npm ci
      
      - name: Build Backend
        working-directory: ./backend
        run: npm run build
      
      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build
        env:
          NODE_ENV: production