name: Quick E2E Test

on:
  workflow_dispatch:
    inputs:
      test-pattern:
        description: 'テストファイルパターン'
        required: false
        default: '.*'
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      LANG: ja_JP.UTF-8
      LC_ALL: ja_JP.UTF-8
    services:
      mongodb:
        image: mongo:7
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup locale
        run: |
          sudo apt-get update
          sudo apt-get install -y locales
          sudo locale-gen ja_JP.UTF-8
          echo "LANG=ja_JP.UTF-8" >> $GITHUB_ENV
          echo "LC_ALL=ja_JP.UTF-8" >> $GITHUB_ENV
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Install dependencies
        run: |
          pnpm install --no-frozen-lockfile
          cd frontend && pnpm install --no-frozen-lockfile
          cd ../backend && pnpm install --no-frozen-lockfile
        
      - name: Install Playwright browsers
        run: |
          # Playwright公式の依存関係インストールコマンドを使用
          sudo npx playwright install-deps
          # Chromiumのみインストール
          npx playwright install chromium
      
      - name: Build frontend
        run: |
          cd frontend
          npm run build
      
      - name: Start servers
        run: |
          # 環境変数を設定
          export NODE_ENV=test
          export JWT_SECRET=test-secret-key
          export MONGODB_URI=mongodb://localhost:27017/test
          export MONGO_URI=mongodb://localhost:27017/test
          export SENDGRID_API_KEY=dummy-key-for-test
          export STRIPE_SECRET_KEY=sk_test_dummy
          export STRIPE_WEBHOOK_SECRET=whsec_test_dummy
          
          # バックエンドサーバーを起動
          cd backend && NODE_ENV=test MONGO_URI=mongodb://localhost:27017/test JWT_SECRET=test-secret-key JWT_REFRESH_SECRET=test-refresh-secret FRONTEND_URL=http://localhost:3000 SMTP_HOST=localhost SMTP_PORT=1025 npm run dev > backend.log 2>&1 &
          BACKEND_PID=$!
          sleep 10
          
          # フロントエンドサーバーを起動  
          cd frontend && npm run start > frontend.log 2>&1 &
          FRONTEND_PID=$!
          sleep 15
          
          # サーバーが起動したか確認
          echo "=== Checking server status ==="
          curl -f http://localhost:5000/api/v1/health || (echo "Backend not ready"; cat backend/backend.log; exit 1)
          curl -f http://localhost:3000 || (echo "Frontend not ready"; cat frontend/frontend.log; exit 1)
          
          # プロセスが生きているか確認
          ps -p $BACKEND_PID || (echo "Backend crashed"; cat backend/backend.log; exit 1)
          ps -p $FRONTEND_PID || (echo "Frontend crashed"; cat frontend/frontend.log; exit 1)
        
      - name: Run specific test
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3000
        run: |
          npm run test:e2e -- --grep "${{ github.event.inputs.test-pattern }}"
        
      - name: Generate failure report
        if: always()
        run: npm run failures:md || echo "No test results found"
        
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            playwright-report
            test-results/
            coverage/failures.md