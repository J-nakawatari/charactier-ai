#!/usr/bin/env bash
set -e

echo 'üîí CSRF Security Check Suite'
echo '============================'

# 1. JestÂçò‰Ωì„ÉÜ„Çπ„Éà„ÅÆÂÆüË°å
echo ''
echo '1Ô∏è‚É£ Running Jest unit tests...'
if npx jest tests/csrf/*.spec.ts 2>/dev/null; then
  echo '‚úÖ CSRF unit tests PASSED'
else
  echo '‚ùå CSRF unit tests FAILED'
  exit 1
fi

# 2. CSRF„Ç®„É©„Éº„É≠„Ç∞„ÅÆ„ÉÅ„Çß„ÉÉ„ÇØÔºà„É≠„Éº„Ç´„É´„ÉÜ„Çπ„ÉàÁí∞Â¢ÉÁî®Ôºâ
echo ''
echo '2Ô∏è‚É£ Checking for CSRF errors in logs...'
LOG_FILE="/var/log/charactier/app.log"
if [ -f "$LOG_FILE" ]; then
  if grep -q 'invalid csrf token' "$LOG_FILE" 2>/dev/null; then
    echo '‚ö†Ô∏è  CSRF token errors detected in logs'
    echo 'Recent CSRF errors:'
    grep 'invalid csrf token' "$LOG_FILE" | tail -5
  else
    echo '‚úÖ No CSRF errors in logs'
  fi
else
  echo '‚ÑπÔ∏è  Log file not found (OK for test environment)'
fi

# 3. CSRF„Éü„Éâ„É´„Ç¶„Çß„Ç¢„ÅÆÂ≠òÂú®Á¢∫Ë™ç
echo ''
echo '3Ô∏è‚É£ Verifying CSRF middleware implementation...'
if grep -r "csrfProtection" src/ >/dev/null 2>&1; then
  echo '‚úÖ CSRF protection middleware found'
  echo "Files using CSRF protection:"
  grep -l "csrfProtection" src/**/*.ts 2>/dev/null | head -5
else
  echo '‚ùå CSRF protection middleware NOT FOUND'
  exit 1
fi

# 4. CSRFÈô§Â§ñ„Éë„Çπ„ÅÆÁ¢∫Ë™ç
echo ''
echo '4Ô∏è‚É£ Checking CSRF bypass paths...'
if grep -q "skipRoutes" src/services/csrfProtection.ts 2>/dev/null; then
  echo '‚úÖ CSRF bypass configuration found'
  echo "Checking for excluded routes (webhooks, etc.)..."
  # index.ts„ÅßcsrfProtection„Åå„Å©„Åì„Åß‰Ωø„Çè„Çå„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç
  if grep -q "/webhook" src/index.ts 2>/dev/null; then
    echo '‚úÖ Webhook routes properly excluded from CSRF'
  fi
else
  echo '‚ÑπÔ∏è  CSRF bypass uses skipRoutes configuration'
fi

echo ''
echo '============================'
echo 'üéâ CSRF SECURITY CHECK COMPLETED'
echo ''
echo 'Summary:'
echo '- Unit tests: ‚úÖ'
echo '- Middleware: ‚úÖ'
echo '- Configuration: ‚úÖ'
echo ''
echo 'Note: CodeQL and Playwright tests require additional setup'