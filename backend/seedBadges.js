const mongoose = require('mongoose');
require('dotenv').config();

const { BadgeModel } = require('./src/models/BadgeModel');

async function seedBadges() {
  try {
    await mongoose.connect(process.env.MONGO_URI);
    console.log('üîç MongoDBÊé•Á∂öÊàêÂäü');
    
    // Êó¢Â≠ò„ÅÆ„Éê„ÉÉ„Ç∏„Çí„ÇØ„É™„Ç¢
    await BadgeModel.deleteMany({});
    console.log('üóëÔ∏è Êó¢Â≠ò„Éê„ÉÉ„Ç∏„Éá„Éº„Çø„Çí„ÇØ„É™„Ç¢');
    
    // „Éá„Éï„Ç©„É´„Éà„Éê„ÉÉ„Ç∏„Éá„Éº„Çø
    const defaultBadges = [
      {
        name: { ja: '„ÅØ„Åò„ÇÅ„ÅÆ‰∏ÄÊ≠©', en: 'First Step' },
        description: { ja: 'ÂàùÂõû„ÉÅ„É£„ÉÉ„Éà„ÇíÂÆå‰∫Ü„Åó„Åæ„Åó„Åü', en: 'Completed your first chat' },
        iconUrl: 'beginner_first_chat',
        type: 'beginner',
        condition: { type: 'chat_count', value: 1 },
        isActive: true
      },
      {
        name: { ja: '„Åä„Åó„ÇÉ„Åπ„ÇäÂ•Ω„Åç', en: 'Chatty' },
        description: { ja: '10Âõû„ÅÆ„ÉÅ„É£„ÉÉ„Éà„ÇíÂÆå‰∫Ü„Åó„Åæ„Åó„Åü', en: 'Completed 10 chats' },
        iconUrl: 'chat_10_messages',
        type: 'chat',
        condition: { type: 'chat_count', value: 10 },
        isActive: true
      },
      {
        name: { ja: '‰ºöË©±„Éû„Çπ„Çø„Éº', en: 'Chat Master' },
        description: { ja: '100Âõû„ÅÆ„ÉÅ„É£„ÉÉ„Éà„ÇíÂÆå‰∫Ü„Åó„Åæ„Åó„Åü', en: 'Completed 100 chats' },
        iconUrl: 'chat_100_messages',
        type: 'chat',
        condition: { type: 'chat_count', value: 100 },
        isActive: true
      },
      {
        name: { ja: 'Ë¶™ÂØÜÂ∫¶„É¨„Éô„É´10', en: 'Affinity Level 10' },
        description: { ja: '„Ç≠„É£„É©„ÇØ„Çø„Éº„Å®„ÅÆË¶™ÂØÜÂ∫¶„Åå„É¨„Éô„É´10„Å´ÈÅî„Åó„Åæ„Åó„Åü', en: 'Reached affinity level 10 with a character' },
        iconUrl: 'affinity_level_10',
        type: 'affinity',
        condition: { type: 'affinity_level', value: 10 },
        isActive: true
      },
      {
        name: { ja: 'Ë¶™ÂØÜÂ∫¶„É¨„Éô„É´50', en: 'Affinity Level 50' },
        description: { ja: '„Ç≠„É£„É©„ÇØ„Çø„Éº„Å®„ÅÆË¶™ÂØÜÂ∫¶„Åå„É¨„Éô„É´50„Å´ÈÅî„Åó„Åæ„Åó„Åü', en: 'Reached affinity level 50 with a character' },
        iconUrl: 'affinity_level_50',
        type: 'affinity',
        condition: { type: 'affinity_level', value: 50 },
        isActive: true
      },
      {
        name: { ja: 'Â∏∏ÈÄ£„Åï„Çì', en: 'Regular' },
        description: { ja: '7Êó•ÈñìÈÄ£Á∂ö„Åß„É≠„Ç∞„Ç§„É≥„Åó„Åæ„Åó„Åü', en: 'Logged in for 7 consecutive days' },
        iconUrl: 'login_7_days',
        type: 'login',
        condition: { type: 'login_days', value: 7 },
        isActive: true
      },
      {
        name: { ja: 'ÂàùÂõûË≥ºÂÖ•', en: 'First Purchase' },
        description: { ja: 'Âàù„ÇÅ„Å¶„Éà„Éº„ÇØ„É≥„ÇíË≥ºÂÖ•„Åó„Åæ„Åó„Åü', en: 'Made your first token purchase' },
        iconUrl: 'purchase_first',
        type: 'special',
        condition: { type: 'purchase_count', value: 1 },
        isActive: true
      }
    ];
    
    // „Éê„ÉÉ„Ç∏„Çí‰ΩúÊàê
    const createdBadges = await BadgeModel.insertMany(defaultBadges);
    console.log(`‚úÖ ${createdBadges.length}ÂÄã„ÅÆ„Éê„ÉÉ„Ç∏„Çí‰ΩúÊàê„Åó„Åæ„Åó„Åü:`);
    
    createdBadges.forEach(badge => {
      console.log(`  - ${badge.name.ja} (${badge.type})`);
    });
    
  } catch (error) {
    console.error('‚ùå „Éê„ÉÉ„Ç∏„Ç∑„Éº„Éâ„Ç®„É©„Éº:', error);
  } finally {
    await mongoose.disconnect();
    process.exit(0);
  }
}

seedBadges();