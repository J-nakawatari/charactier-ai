#!/usr/bin/env node

import * as fs from 'fs';
import * as path from 'path';
import { glob } from 'glob';

// ÂØæË±°„Éï„Ç°„Ç§„É´„ÅÆ„Éë„Çø„Éº„É≥
const filePatterns = [
  'app/**/*.tsx',
  'app/**/*.ts',
  'components/**/*.tsx',
  'components/**/*.ts',
  'hooks/**/*.ts',
  'utils/**/*.ts',
];

// ÁΩÆÊèõ„Éë„Çø„Éº„É≥ - '/api/v1' „ÇíÁí∞Â¢ÉÂ§âÊï∞„Éô„Éº„Çπ„Å´Â§âÊõ¥
const replacements = [
  // fetch „Éë„Çø„Éº„É≥
  { from: /fetch\(['"]\/api\/v1\//g, to: 'fetch(`/api/${process.env.NEXT_PUBLIC_API_VERSION || \'v1\'}/' },
  { from: /fetch\(`\/api\/v1\//g, to: 'fetch(`/api/${process.env.NEXT_PUBLIC_API_VERSION || \'v1\'}/' },
  
  // authenticatedFetch „Éë„Çø„Éº„É≥
  { from: /authenticatedFetch\(['"]\/api\/v1\//g, to: 'authenticatedFetch(`/api/${process.env.NEXT_PUBLIC_API_VERSION || \'v1\'}/' },
  { from: /authenticatedFetch\(`\/api\/v1\//g, to: 'authenticatedFetch(`/api/${process.env.NEXT_PUBLIC_API_VERSION || \'v1\'}/' },
  
  // adminFetch „Éë„Çø„Éº„É≥
  { from: /adminFetch\(['"]\/api\/v1\//g, to: 'adminFetch(`/api/${process.env.NEXT_PUBLIC_API_VERSION || \'v1\'}/' },
  { from: /adminFetch\(`\/api\/v1\//g, to: 'adminFetch(`/api/${process.env.NEXT_PUBLIC_API_VERSION || \'v1\'}/' },
  
  // adminAuthenticatedFetch „Éë„Çø„Éº„É≥
  { from: /adminAuthenticatedFetch\(['"]\/api\/v1\//g, to: 'adminAuthenticatedFetch(`/api/${process.env.NEXT_PUBLIC_API_VERSION || \'v1\'}/' },
  { from: /adminAuthenticatedFetch\(`\/api\/v1\//g, to: 'adminAuthenticatedFetch(`/api/${process.env.NEXT_PUBLIC_API_VERSION || \'v1\'}/' },
  
  // EventSource „Éë„Çø„Éº„É≥  
  { from: /new EventSource\(['"]\/api\/v1\//g, to: 'new EventSource(`/api/${process.env.NEXT_PUBLIC_API_VERSION || \'v1\'}/' },
  { from: /new EventSource\(`\/api\/v1\//g, to: 'new EventSource(`/api/${process.env.NEXT_PUBLIC_API_VERSION || \'v1\'}/' },
];

// „Éò„É´„Éë„ÉºÈñ¢Êï∞„ÇíËøΩÂä†„Åô„Çã„Åü„ÇÅ„ÅÆ„Ç≥„Éº„Éâ
const helperCode = `
// API Version Helper
const getApiPath = (path: string) => {
  const apiVersion = process.env.NEXT_PUBLIC_API_VERSION || 'v1';
  return \`/api/\${apiVersion}\${path}\`;
};
`;

let totalFiles = 0;
let totalReplacements = 0;

// ÂêÑ„Éï„Ç°„Ç§„É´„Éë„Çø„Éº„É≥„Å´ÂØæ„Åó„Å¶Âá¶ÁêÜ
filePatterns.forEach(pattern => {
  const files = glob.sync(pattern, { cwd: process.cwd() });
  
  files.forEach((filePath: string) => {
    let content = fs.readFileSync(filePath, 'utf-8');
    let fileChanged = false;
    let fileReplacements = 0;
    
    replacements.forEach(({ from, to }) => {
      const matches = content.match(from);
      if (matches && matches.length > 0) {
        content = content.replace(from, to);
        fileChanged = true;
        fileReplacements += matches.length;
        totalReplacements += matches.length;
      }
    });
    
    if (fileChanged) {
      fs.writeFileSync(filePath, content);
      console.log(`‚úÖ Updated ${filePath} (${fileReplacements} replacements)`);
      totalFiles++;
    }
  });
});

console.log(`
‚úÖ Migration to env-based API version completed!
üìä Summary:
  - Total files updated: ${totalFiles}
  - Total replacements: ${totalReplacements}
  
‚ö†Ô∏è  Please review the changes and test thoroughly before deploying.
`);