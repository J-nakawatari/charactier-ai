# Nginx Configuration for charactier-ai.com
# Fixed version - proxy_pass末尾スラッシュ削除済み

server {
    listen 443 ssl http2;
    server_name charactier-ai.com;
    
    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/charactier-ai.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/charactier-ai.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    
    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Frontend proxy (Next.js)
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # API v1 proxy - 末尾スラッシュ削除
    # 重要: proxy_passの末尾にスラッシュがないため、/api/v1/のプレフィックスが保持されます
    location /api/v1/ {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection '';
        
        # SSE (Server-Sent Events) 対応
        proxy_read_timeout 600;    # 10分タイムアウト（504対策）
        proxy_buffering off;       # バッファリング無効化
        proxy_cache off;           # キャッシュ無効化
        
        # SSE specific headers
        add_header Cache-Control 'no-cache' always;
        add_header X-Accel-Buffering 'no' always;
        
        # CORS対応（必要に応じて）
        add_header Access-Control-Allow-Origin "$http_origin" always;
        add_header Access-Control-Allow-Credentials 'true' always;
        add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header Access-Control-Allow-Headers 'Authorization, Content-Type' always;
        
        # OPTIONSメソッドの処理
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "$http_origin" always;
            add_header Access-Control-Allow-Credentials 'true' always;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Authorization, Content-Type' always;
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }
    
    # 認証API（/api/authの特別処理）
    location /api/auth/ {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 認証系は短めのタイムアウト
        proxy_read_timeout 30;
    }
    
    # Stripe webhook endpoint
    location /webhook/stripe {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Stripe webhookはraw bodyが必要
        proxy_set_header Content-Type $content_type;
        proxy_set_header X-Stripe-Signature $http_stripe_signature;
    }
    
    # Static files (uploads)
    location /uploads {
        alias /home/jun/projects/charactier-ai/uploads;
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # 画像ファイルのMIMEタイプを明示
        location ~ \.(jpg|jpeg|png|gif|webp)$ {
            add_header Content-Type image/webp;
        }
    }
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # ログ設定
    access_log /var/log/nginx/charactier-ai.access.log;
    error_log /var/log/nginx/charactier-ai.error.log;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name charactier-ai.com;
    return 301 https://$server_name$request_uri;
}

# www to non-www redirect
server {
    listen 443 ssl http2;
    server_name www.charactier-ai.com;
    
    ssl_certificate /etc/letsencrypt/live/charactier-ai.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/charactier-ai.com/privkey.pem;
    
    return 301 https://charactier-ai.com$request_uri;
}