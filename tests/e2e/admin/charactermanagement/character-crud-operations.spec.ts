import { test, expect } from '@playwright/test';

test.describe('„Ç≠„É£„É©„ÇØ„Çø„ÉºÁÆ°ÁêÜÊ©üËÉΩ„ÅÆÂåÖÊã¨ÁöÑE2E„ÉÜ„Çπ„Éà', () => {
  test.setTimeout(60000); // ÂÖ®„ÉÜ„Çπ„Éà„ÅÆ„Çø„Ç§„É†„Ç¢„Ç¶„Éà„Çí60Áßí„Å´Ë®≠ÂÆö
  const adminEmail = 'admin@example.com';
  const adminPassword = 'admin123';
  
  // beforeEach„ÅÆ‰ª£„Çè„Çä„Å´„ÄÅÂêÑ„ÉÜ„Çπ„Éà„ÅßÊñ∞„Åó„ÅÑ„Ç≥„É≥„ÉÜ„Ç≠„Çπ„Éà„Çí‰ΩøÁî®

  test('Êñ∞Ë¶è„Ç≠„É£„É©„ÇØ„Çø„Éº„ÅÆ‰ΩúÊàê', async ({ browser }) => {
    // Êñ∞„Åó„ÅÑ„Ç≥„É≥„ÉÜ„Ç≠„Çπ„Éà„Åß„Çà„ÇäÂÆâÂÆö„Åó„ÅüÂãï‰Ωú„ÇíÂÆüÁèæ
    const context = await browser.newContext();
    const page = await context.newPage();
    
    // „É≠„Ç∞„Ç§„É≥
    await page.goto('/admin/login');
    await page.waitForLoadState('networkidle');
    await page.fill('input[type="email"]', adminEmail);
    await page.fill('input[type="password"]', adminPassword);
    await page.click('button[type="submit"]');
    
    // „ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Å∏„ÅÆÈÅ∑Áßª„ÇíÂæÖ„Å§
    await page.waitForURL('**/admin/dashboard', { timeout: 15000 });
    await page.waitForTimeout(5000); // ÂçÅÂàÜ„Å™ÂæÖÊ©üÔºàÈáçË¶ÅÔºâ
    
    // „Éö„Éº„Ç∏„ÇíÈñâ„Åò„ÇãÔºàdebug-character-form„Å®Âêå„Åò„Ç¢„Éó„É≠„Éº„ÉÅÔºâ
    await page.close();
    
    // Êñ∞„Åó„ÅÑ„Éö„Éº„Ç∏„Åß„Ç≠„É£„É©„ÇØ„Çø„ÉºÁÆ°ÁêÜ„Éö„Éº„Ç∏„ÇíÈñã„Åè
    const newPage = await context.newPage();
    await newPage.goto('/admin/characters');
    await newPage.waitForLoadState('networkidle');
    await newPage.waitForTimeout(2000);
    
    // Êñ∞Ë¶è‰ΩúÊàê„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØÔºàÂè≥‰∏ä„ÅÆÁ¥´Ëâ≤„ÅÆ„Éú„Çø„É≥Ôºâ
    const newButton = newPage.locator('button:has-text("Êñ∞Ë¶è‰ΩúÊàê")').first();
    
    // „Éú„Çø„É≥„ÅåË¶ã„Å§„Åã„Çâ„Å™„ÅÑÂ†¥Âêà„ÅØÁõ¥Êé•URL„Å´ÁßªÂãï
    if (await newButton.isVisible()) {
      await newButton.click();
      // „Éö„Éº„Ç∏ÈÅ∑Áßª„ÇíÂæÖ„Å§
      await newPage.waitForLoadState('networkidle');
      await newPage.waitForTimeout(2000);
    } else {
      console.log('‚ö†Ô∏è Êñ∞Ë¶è‰ΩúÊàê„Éú„Çø„É≥„ÅåË¶ã„Å§„Åã„Çâ„Å™„ÅÑ„Åü„ÇÅ„ÄÅÁõ¥Êé•URL„Å´ÁßªÂãï');
      await newPage.goto('/admin/characters/new');
      await newPage.waitForLoadState('networkidle');
      await newPage.waitForTimeout(2000);
    }
    
    // Âü∫Êú¨ÊÉÖÂ†±„ÅÆÂÖ•Âäõ
    const timestamp = Date.now();
    const characterName = `„ÉÜ„Çπ„Éà„Ç≠„É£„É©_${timestamp}`;
    
    // „Åæ„ÅöË¶ÅÁ¥†„ÅÆÂ≠òÂú®„ÇíÁ¢∫Ë™ç
    await newPage.waitForSelector('input[type="text"]', { timeout: 10000 });
    
    const textInputs = await newPage.locator('input[type="text"]').all();
    const textareas = await newPage.locator('textarea').all();
    
    console.log(`üìù ÂÖ•ÂäõË¶ÅÁ¥†Êï∞: text inputs=${textInputs.length}, textareas=${textareas.length}`);
    
    // Ë¶ÅÁ¥†„ÅåÂ≠òÂú®„Åó„Å™„ÅÑÂ†¥Âêà„ÅØ„Ç®„É©„Éº
    if (textInputs.length === 0) {
      await newPage.screenshot({ path: 'no-text-inputs-error.png', fullPage: true });
      throw new Error('„ÉÜ„Ç≠„Çπ„ÉàÂÖ•Âäõ„Éï„Ç£„Éº„É´„Éâ„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
    }
    
    // „Ç≠„É£„É©„ÇØ„Çø„ÉºÂêçÔºàÊó•Êú¨Ë™û„ÉªËã±Ë™ûÔºâ
    if (textInputs.length >= 2) {
      await textInputs[0].fill(characterName);
      await textInputs[1].fill(`Test Character ${timestamp}`);
    } else {
      console.warn(`‚ö†Ô∏è ÊúüÂæÖ„Åó„ÅüÊï∞„ÅÆ„ÉÜ„Ç≠„Çπ„ÉàÂÖ•Âäõ„Éï„Ç£„Éº„É´„Éâ„Åå„ÅÇ„Çä„Åæ„Åõ„Çì: ${textInputs.length}ÂÄã`);
      // ÊúÄ‰ΩéÈôê„ÄÅÊúÄÂàù„ÅÆ„Éï„Ç£„Éº„É´„Éâ„Å†„ÅëÂÖ•Âäõ
      await textInputs[0].fill(characterName);
    }
    
    // „Ç≠„É£„ÉÉ„Éà„Éï„É¨„Éº„Ç∫ÔºàÊó•Êú¨Ë™û„ÉªËã±Ë™ûÔºâ
    if (textInputs.length >= 4) {
      await textInputs[2].fill('„ÉÜ„Çπ„Éà„Ç≠„É£„ÉÉ„ÉÅ„Éï„É¨„Éº„Ç∫');
      await textInputs[3].fill('Test catchphrase');
    }
    
    // Ë™¨ÊòéÔºàÊó•Êú¨Ë™û„ÉªËã±Ë™ûÔºâ
    if (textareas.length >= 2) {
      await textareas[0].fill('E2E„ÉÜ„Çπ„ÉàÁî®„ÅÆ„Ç≠„É£„É©„ÇØ„Çø„ÉºË™¨Êòé„Åß„Åô„ÄÇ');
      await textareas[1].fill('This is a test character for E2E testing.');
    } else if (textareas.length >= 1) {
      await textareas[0].fill('E2E„ÉÜ„Çπ„ÉàÁî®„ÅÆ„Ç≠„É£„É©„ÇØ„Çø„ÉºË™¨Êòé„Åß„Åô„ÄÇ');
    }
    
    // „Çª„É¨„ÇØ„Éà„Éú„ÉÉ„ÇØ„Çπ
    const selects = await newPage.locator('select').all();
    
    // ÊÄßÂà•Ôºà1Áï™ÁõÆ„ÅÆselectÔºâ
    if (selects.length > 0) {
      await selects[0].selectOption({ index: 1 });
    }
    
    // Âπ¥ÈΩ¢„Å®ËÅ∑Ê•≠
    if (textInputs.length > 5) {
      await textInputs[4].fill('20Ê≠≥');
      await textInputs[5].fill('„ÉÜ„Çπ„Éà„Ç≠„É£„É©„ÇØ„Çø„Éº');
    }
    
    // ÊÄßÊ†º„Éó„É™„Çª„ÉÉ„ÉàÔºà2Áï™ÁõÆ„ÅÆselectÔºâ
    if (selects.length > 1) {
      const options = await selects[1].locator('option').all();
      for (let i = 1; i < options.length; i++) {
        const value = await options[i].getAttribute('value');
        if (value && value !== '') {
          await selects[1].selectOption(value);
          break;
        }
      }
    }
    
    // ÊÄßÊ†º„Çø„Ç∞„ÇíÈÅ∏ÊäûÔºàÂøÖÈ†àÔºâ
    const personalityTags = newPage.locator('input[type="checkbox"][name*="personality"], label:has-text("ÂÑ™„Åó„ÅÑ"), label:has-text("„Éï„É¨„É≥„Éâ„É™„Éº")');
    const firstTag = personalityTags.first();
    if (await firstTag.isVisible()) {
      await firstTag.click();
    } else {
      // „ÉÅ„Çß„ÉÉ„ÇØ„Éú„ÉÉ„ÇØ„Çπ„ÅåË¶ã„Å§„Åã„Çâ„Å™„ÅÑÂ†¥Âêà„ÄÅÊúÄÂàù„ÅÆ„ÉÅ„Çß„ÉÉ„ÇØ„Éú„ÉÉ„ÇØ„Çπ„Çí„ÇØ„É™„ÉÉ„ÇØ
      const anyCheckbox = newPage.locator('input[type="checkbox"]').first();
      if (await anyCheckbox.isVisible()) {
        await anyCheckbox.click();
      }
    }
    
    // „Éá„Éï„Ç©„É´„Éà„É°„ÉÉ„Çª„Éº„Ç∏ÔºàÊó•Êú¨Ë™û„ÉªËã±Ë™ûÔºâ
    if (textareas.length >= 4) {
      await textareas[2].fill('„Åì„Çì„Å´„Å°„ÅØÔºÅ„ÉÜ„Çπ„Éà„Ç≠„É£„É©„ÇØ„Çø„Éº„Åß„Åô„ÄÇ„Çà„Çç„Åó„Åè„ÅäÈ°ò„ÅÑ„Åó„Åæ„ÅôÔºÅ');
      await textareas[3].fill('Hello! I am a test character. Nice to meet you!');
    } else {
      console.log(`‚ö†Ô∏è „Éá„Éï„Ç©„É´„Éà„É°„ÉÉ„Çª„Éº„Ç∏Áî®„ÅÆ„ÉÜ„Ç≠„Çπ„Éà„Ç®„É™„Ç¢„Åå‰∏çË∂≥: ${textareas.length}ÂÄã`);
    }
    
    // ‰æ°Ê†º„Çø„Ç§„Éó„ÅÆÈÅ∏Êäû
    const priceTypeSelect = newPage.locator('select[name="priceType"], input[name="priceType"][type="radio"], select[name="characterAccessType"]');
    if (await priceTypeSelect.first().isVisible()) {
      // ÊúâÊñô„ÇíÈÅ∏Êäû
      await newPage.locator('input[value="paid"], option[value="paid"]').click();
      
      // ‰æ°Ê†ºË®≠ÂÆö
      await newPage.locator('input[name="price"]').fill('1000');
    }
    
    // AI„É¢„Éá„É´„ÅÆÈÅ∏Êäû
    const modelSelect = newPage.locator('select[name="model"], select[name="aiModel"]');
    if (await modelSelect.isVisible()) {
      await modelSelect.selectOption('gpt-4o-mini');
    }
    
    // ÁîªÂÉè„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÔºà„Ç™„Éó„Ç∑„Éß„É≥Ôºâ
    const imageInput = newPage.locator('input[type="file"][name="avatar"], input[type="file"][name="image"]');
    if (await imageInput.isVisible()) {
      // „ÉÜ„Çπ„ÉàÁîªÂÉè„Çí„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÔºàÂÆüÈöõ„ÅÆ„Éï„Ç°„Ç§„É´„Éë„Çπ„ÅåÂøÖË¶ÅÔºâ
      // await imageInput.setInputFiles('path/to/test-image.jpg');
    }
    
    // ‰øùÂ≠ò„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ
    const saveButton = newPage.locator('button:has-text("‰øùÂ≠ò"), button:has-text("‰ΩúÊàê"), button[type="submit"]').first();
    
    // „Éú„Çø„É≥„ÅåÊúâÂäπ„Å´„Å™„Çã„Åæ„ÅßÂæÖ„Å§
    await expect(saveButton).toBeEnabled({ timeout: 5000 });
    
    // „ÇØ„É™„ÉÉ„ÇØÂâç„Å´„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„Ç¢„Ç§„Éâ„É´„ÇíÂæÖ„Å§
    await newPage.waitForLoadState('networkidle');
    
    // ‰øùÂ≠ò„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ
    await saveButton.click();
    
    // ÊàêÂäü„ÅÆÊåáÊ®ô„ÇíÂæÖ„Å§Ôºà„Çà„ÇäÊüîËªü„Å´Ôºâ
    try {
      // „Åæ„ÅöÂ∞ë„ÅóÂæÖ„Å§
      await newPage.waitForTimeout(2000);
      
      // ÁèæÂú®„ÅÆURL„ÇíÁ¢∫Ë™ç
      const currentUrl = newPage.url();
      console.log(`ÁèæÂú®„ÅÆURL: ${currentUrl}`);
      
      // ÊàêÂäü„ÅÆÂà§ÂÆöÔºàË§áÊï∞„ÅÆÊù°‰ª∂Ôºâ
      let isSuccess = false;
      try {
        isSuccess = 
          // URL„Åå„Ç≠„É£„É©„ÇØ„Çø„Éº‰∏ÄË¶ß„Åæ„Åü„ÅØÁ∑®ÈõÜ„Éö„Éº„Ç∏
          currentUrl.includes('/admin/characters') ||
          // ÊàêÂäü„É°„ÉÉ„Çª„Éº„Ç∏„ÅåË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Çã
          await newPage.locator('.toast-success, .success-message').isVisible().catch(() => false) ||
          // ‰ΩúÊàê„Åó„Åü„Ç≠„É£„É©„ÇØ„Çø„ÉºÂêç„ÅåË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Çã
          await newPage.locator(`text="${characterName}"`).isVisible().catch(() => false);
      } catch (checkError) {
        console.log('ÊàêÂäüÂà§ÂÆö‰∏≠„ÅÆ„Ç®„É©„Éº:', checkError.message);
        isSuccess = false;
      }
      
      if (isSuccess) {
        console.log(`„Ç≠„É£„É©„ÇØ„Çø„Éº„Äå${characterName}„Äç„ÅåÊ≠£Â∏∏„Å´‰ΩúÊàê„Åï„Çå„Åæ„Åó„Åü`);
      } else {
        // „Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÊé¢„Åô
        const errorMessage = await newPage.locator('.error-message, .toast-error, [role="alert"]:has-text("„Ç®„É©„Éº")').textContent().catch(() => null);
        if (errorMessage) {
          throw new Error(`„Ç≠„É£„É©„ÇØ„Çø„Éº‰ΩúÊàê„Ç®„É©„Éº: ${errorMessage}`);
        }
        throw new Error('„Ç≠„É£„É©„ÇØ„Çø„Éº‰ΩúÊàê„ÅÆÊàêÂäü„ÅåÁ¢∫Ë™ç„Åß„Åç„Åæ„Åõ„Çì„Åß„Åó„Åü');
      }
    } catch (error) {
      console.error('„Ç≠„É£„É©„ÇØ„Çø„Éº‰ΩúÊàê„ÉÜ„Çπ„Éà„Ç®„É©„Éº:', error);
      try {
        // newPage„Åå„Åæ„Å†Èñã„ÅÑ„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÅÆ„Åø„Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà„ÇíÊíÆ„Çã
        if (newPage && !newPage.isClosed()) {
          await newPage.screenshot({ path: 'character-creation-error.png' });
        }
      } catch (screenshotError) {
        console.log('„Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà„ÅÆ‰øùÂ≠ò„Å´Â§±Êïó:', screenshotError.message);
      }
      throw error;
    } finally {
      // „ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó
      try {
        await context.close();
      } catch (closeError) {
        console.log('„Ç≥„É≥„ÉÜ„Ç≠„Çπ„Éà„ÅÆ„ÇØ„É≠„Éº„Ç∫„Å´Â§±Êïó:', closeError.message);
      }
    }
  });

  test('Êó¢Â≠ò„Ç≠„É£„É©„ÇØ„Çø„Éº„ÅÆÁ∑®ÈõÜ', async ({ browser }) => {
    const context = await browser.newContext();
    const page = await context.newPage();
    let newPage; // „Çπ„Ç≥„Éº„Éó„ÇíÂ∫É„Åí„Çã
    
    console.log('üîß „Ç≠„É£„É©„ÇØ„Çø„ÉºÁ∑®ÈõÜ„ÉÜ„Çπ„ÉàÈñãÂßã');
    
    try {
      // „É≠„Ç∞„Ç§„É≥
      await page.goto('/admin/login');
      await page.waitForLoadState('networkidle');
      await page.fill('input[type="email"]', adminEmail);
      await page.fill('input[type="password"]', adminPassword);
      await page.click('button[type="submit"]');
      
      // „ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Å∏„ÅÆÈÅ∑Áßª„ÇíÂæÖ„Å§
      await page.waitForURL('**/admin/dashboard', { timeout: 15000 });
      await page.waitForTimeout(5000);
      await page.close();
      
      // Êñ∞„Åó„ÅÑ„Éö„Éº„Ç∏„Åß„Ç≠„É£„É©„ÇØ„Çø„ÉºÁÆ°ÁêÜ„Éö„Éº„Ç∏„ÇíÈñã„Åè
      newPage = await context.newPage();
      await newPage.goto('/admin/characters');
      await newPage.waitForLoadState('networkidle');
      await newPage.waitForTimeout(3000);
      
      // „Ç≠„É£„É©„ÇØ„Çø„Éº„ÅåÂ≠òÂú®„Åô„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
      const characterRows = await newPage.locator('tbody tr, .character-row, [data-testid="character-item"]').count();
      console.log(`üìä „Ç≠„É£„É©„ÇØ„Çø„ÉºÊï∞: ${characterRows}`);
      
      if (characterRows === 0) {
        console.log('‚ö†Ô∏è „Ç≠„É£„É©„ÇØ„Çø„Éº„ÅåÂ≠òÂú®„Åó„Åæ„Åõ„Çì„ÄÇ„ÉÜ„Çπ„ÉàÁî®„Ç≠„É£„É©„ÇØ„Çø„Éº„Çí‰ΩúÊàê„Åó„Åæ„Åô...');
        
        // Êñ∞Ë¶è‰ΩúÊàê„Éö„Éº„Ç∏„Å∏ÁßªÂãï
        await newPage.goto('/admin/characters/new');
        await newPage.waitForLoadState('networkidle');
        await newPage.waitForTimeout(2000);
        
        // ÊúÄÂ∞èÈôê„ÅÆÊÉÖÂ†±„Åß„Ç≠„É£„É©„ÇØ„Çø„Éº„Çí‰ΩúÊàê
        const timestamp = Date.now();
        const textInputs = await newPage.locator('input[type="text"]').all();
        await textInputs[0].fill(`Á∑®ÈõÜ„ÉÜ„Çπ„ÉàÁî®_${timestamp}`);
        await textInputs[1].fill(`Edit Test ${timestamp}`);
        
        // „Ç≠„É£„ÉÉ„ÉÅ„Éï„É¨„Éº„Ç∫
        if (textInputs.length > 3) {
          await textInputs[2].fill('Á∑®ÈõÜ„ÉÜ„Çπ„ÉàÁî®„Ç≠„É£„ÉÉ„ÉÅ„Éï„É¨„Éº„Ç∫');
          await textInputs[3].fill('Edit test catchphrase');
        }
        
        // Ë™¨Êòé
        const textareas = await newPage.locator('textarea').all();
        await textareas[0].fill('Á∑®ÈõÜ„ÉÜ„Çπ„ÉàÁî®„ÅÆË™¨Êòé');
        await textareas[1].fill('Edit test description');
        
        // ÊÄßÂà•
        const selects = await newPage.locator('select').all();
        if (selects.length > 0) {
          await selects[0].selectOption({ index: 1 });
        }
        
        // ÊÄßÊ†º„Éó„É™„Çª„ÉÉ„Éà
        if (selects.length > 1) {
          const options = await selects[1].locator('option').all();
          for (let i = 1; i < options.length; i++) {
            const value = await options[i].getAttribute('value');
            if (value && value !== '') {
              await selects[1].selectOption(value);
              break;
            }
          }
        }
        
        // ÊÄßÊ†º„Çø„Ç∞
        const checkbox = newPage.locator('input[type="checkbox"]').first();
        if (await checkbox.isVisible()) {
          await checkbox.click();
        }
        
        // „Éá„Éï„Ç©„É´„Éà„É°„ÉÉ„Çª„Éº„Ç∏
        if (textareas.length >= 4) {
          await textareas[2].fill('Á∑®ÈõÜ„ÉÜ„Çπ„ÉàÁî®„Éá„Éï„Ç©„É´„Éà„É°„ÉÉ„Çª„Éº„Ç∏');
          await textareas[3].fill('Edit test default message');
        }
        
        // ‰øùÂ≠ò
        await newPage.locator('button[type="submit"]').click();
        await newPage.waitForTimeout(3000);
        
        // „Ç≠„É£„É©„ÇØ„Çø„Éº‰∏ÄË¶ß„Å´Êàª„Çã
        await newPage.goto('/admin/characters');
        await newPage.waitForLoadState('networkidle');
        await newPage.waitForTimeout(2000);
      }
      
      // Á∑®ÈõÜ„Éú„Çø„É≥„ÇíÊé¢„ÅôÔºàÈâõÁ≠Ü„Ç¢„Ç§„Ç≥„É≥Ôºâ
      const editButtonSelectors = [
        'button[title*="Á∑®ÈõÜ"]',
        'a[href*="/edit"]',
        'button svg[class*="edit"]',
        'button:has(svg)',
        '.edit-button'
      ];
      
      let editButtonClicked = false;
      for (const selector of editButtonSelectors) {
        try {
          const button = newPage.locator(selector).first();
          if (await button.isVisible({ timeout: 2000 })) {
            await button.click();
            editButtonClicked = true;
            console.log(`‚úÖ Á∑®ÈõÜ„Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØ: ${selector}`);
            break;
          }
        } catch (e) {
          // Ê¨°„ÅÆ„Çª„É¨„ÇØ„Çø„Éº„ÇíË©¶„Åô
        }
      }
      
      if (!editButtonClicked) {
        // „ÉÜ„Éº„Éñ„É´ÂÜÖ„ÅÆ„É™„É≥„ÇØ„ÇíÁõ¥Êé•Êé¢„ÅôÔºàÊìç‰ΩúÂàó„ÅÆÁ∑®ÈõÜ„Ç¢„Ç§„Ç≥„É≥Ôºâ
        const firstRow = newPage.locator('tbody tr').first();
        const editLink = firstRow.locator('td:last-child button').first(); // Êìç‰ΩúÂàó„ÅÆÊúÄÂàù„ÅÆ„Éú„Çø„É≥
        if (await editLink.isVisible()) {
          await editLink.click();
          console.log('‚úÖ Ë°åÂÜÖ„ÅÆÁ∑®ÈõÜ„Ç¢„Ç§„Ç≥„É≥„ÇØ„É™„ÉÉ„ÇØ');
        } else {
          throw new Error('Á∑®ÈõÜ„Éú„Çø„É≥„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
        }
      }
      
      // Á∑®ÈõÜ„Éö„Éº„Ç∏„Å´ÈÅ∑Áßª„Åó„Åü„Åì„Å®„ÇíÁ¢∫Ë™ç
      await newPage.waitForLoadState('networkidle');
      await newPage.waitForTimeout(3000);
      
      const editUrl = newPage.url();
      console.log(`üìç Á∑®ÈõÜ„Éö„Éº„Ç∏URL: ${editUrl}`);
      
      // „Éï„Ç©„Éº„É†Ë¶ÅÁ¥†„ÇíÁ¢∫Ë™çÔºàÊàêÂäü„ÉÜ„Çπ„Éà„Å®Âêå„ÅòÊßãÈÄ†Ôºâ
      const textInputs = await newPage.locator('input[type="text"]').all();
      const textareas = await newPage.locator('textarea').all();
      
      console.log(`üìã „Éï„Ç©„Éº„É†Ë¶ÅÁ¥†Êï∞: „ÉÜ„Ç≠„Çπ„ÉàÂÖ•Âäõ=${textInputs.length}, „ÉÜ„Ç≠„Çπ„Éà„Ç®„É™„Ç¢=${textareas.length}`);
      
      if (textInputs.length === 0) {
        throw new Error('Á∑®ÈõÜ„Éï„Ç©„Éº„É†„ÅåË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì');
      }
      
      // ÁèæÂú®„ÅÆÂÄ§„ÇíÂèñÂæó
      const originalName = await textInputs[0].inputValue();
      console.log(`üìù ÁèæÂú®„ÅÆÂêçÂâç: ${originalName}`);
      
      // ÂêçÂâç„ÇíÊõ¥Êñ∞ÔºàÊó•Êú¨Ë™û„ÉªËã±Ë™ûÔºâ
      const timestamp = Date.now();
      const updatedNameJa = `${originalName}_Êõ¥Êñ∞_${timestamp}`;
      const updatedNameEn = `Updated_${timestamp}`;
      
      await textInputs[0].clear();
      await textInputs[0].fill(updatedNameJa);
      
      if (textInputs.length > 1) {
        await textInputs[1].clear();
        await textInputs[1].fill(updatedNameEn);
      }
      
      console.log('‚úÖ ÂêçÂâçÊõ¥Êñ∞ÂÆå‰∫Ü');
      
      // „Ç≠„É£„ÉÉ„ÉÅ„Éï„É¨„Éº„Ç∫„ÇíÊõ¥Êñ∞
      if (textInputs.length > 3) {
        await textInputs[2].clear();
        await textInputs[2].fill('Êõ¥Êñ∞„Åï„Çå„Åü„Ç≠„É£„ÉÉ„ÉÅ„Éï„É¨„Éº„Ç∫');
        await textInputs[3].clear();
        await textInputs[3].fill('Updated catchphrase');
        console.log('‚úÖ „Ç≠„É£„ÉÉ„ÉÅ„Éï„É¨„Éº„Ç∫Êõ¥Êñ∞ÂÆå‰∫Ü');
      }
      
      // Ë™¨Êòé„ÇíÊõ¥Êñ∞ÔºàÊó•Êú¨Ë™û„ÉªËã±Ë™ûÔºâ
      if (textareas.length >= 2) {
        await textareas[0].clear();
        await textareas[0].fill('Êõ¥Êñ∞„Åï„Çå„Åü„Ç≠„É£„É©„ÇØ„Çø„ÉºË™¨Êòé„Åß„Åô„ÄÇE2E„ÉÜ„Çπ„Éà„Å´„Çà„ÇãÁ∑®ÈõÜ„ÄÇ');
        await textareas[1].clear();
        await textareas[1].fill('Updated character description. Edited by E2E test.');
        console.log('‚úÖ Ë™¨ÊòéÊõ¥Êñ∞ÂÆå‰∫Ü');
      }
      
      // „Éá„Éï„Ç©„É´„Éà„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÊõ¥Êñ∞
      if (textareas.length >= 4) {
        await textareas[2].clear();
        await textareas[2].fill('Êõ¥Êñ∞„Åï„Çå„Åü„Éá„Éï„Ç©„É´„Éà„É°„ÉÉ„Çª„Éº„Ç∏„Åß„ÅôÔºÅ');
        await textareas[3].clear();
        await textareas[3].fill('Updated default message!');
        console.log('‚úÖ „Éá„Éï„Ç©„É´„Éà„É°„ÉÉ„Çª„Éº„Ç∏Êõ¥Êñ∞ÂÆå‰∫Ü');
      }
      
      // „Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„ÉàÔºàÊõ¥Êñ∞ÂâçÔºâ
      await newPage.screenshot({ path: 'character-edit-before-save.png', fullPage: true });
      
      // ‰øùÂ≠ò„Éú„Çø„É≥„ÇíÊé¢„Åô
      const saveButtonSelectors = [
        'button[type="submit"]',
        'button:has-text("Êõ¥Êñ∞")',
        'button:has-text("‰øùÂ≠ò")',
        'button:has-text("Â§âÊõ¥„Çí‰øùÂ≠ò")',
        '.save-button'
      ];
      
      let saveButton = null;
      for (const selector of saveButtonSelectors) {
        const button = newPage.locator(selector).first();
        if (await button.isVisible({ timeout: 1000 })) {
          saveButton = button;
          console.log(`‚úÖ ‰øùÂ≠ò„Éú„Çø„É≥Áô∫Ë¶ã: ${selector}`);
          break;
        }
      }
      
      if (!saveButton) {
        throw new Error('‰øùÂ≠ò„Éú„Çø„É≥„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
      }
      
      // API„É¨„Çπ„Éù„É≥„Çπ„ÇíÁõ£Ë¶ñ
      const updateResponsePromise = newPage.waitForResponse(
        response => response.url().includes('/api/v1/admin/characters') && 
                   (response.request().method() === 'PUT' || response.request().method() === 'PATCH'),
        { timeout: 10000 }
      ).catch(() => null);
      
      // ‰øùÂ≠ò
      await saveButton.click();
      console.log('‚úÖ ‰øùÂ≠ò„Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØ');
      
      // „É¨„Çπ„Éù„É≥„Çπ„ÇíÂæÖ„Å§
      const response = await updateResponsePromise;
      if (response) {
        const status = response.status();
        console.log(`üì° API„É¨„Çπ„Éù„É≥„Çπ: ${status}`);
        
        if (status === 200 || status === 201) {
          console.log(`‚úÖ „Ç≠„É£„É©„ÇØ„Çø„Éº„Äå${updatedNameJa}„Äç„ÅåÊ≠£Â∏∏„Å´Êõ¥Êñ∞„Åï„Çå„Åæ„Åó„Åü`);
        } else {
          const responseBody = await response.json().catch(() => response.text());
          console.log('‚ùå Êõ¥Êñ∞„Ç®„É©„Éº:', responseBody);
        }
      }
      
      // ÁµêÊûú„ÇíÂæÖ„Å§
      await newPage.waitForTimeout(3000);
      
      // ÊàêÂäüÂà§ÂÆö
      const finalUrl = newPage.url();
      const isSuccess = 
        finalUrl.includes('/admin/characters') && !finalUrl.includes('/edit') ||
        await newPage.locator('.toast-success').isVisible().catch(() => false);
      
      if (!isSuccess) {
        await newPage.screenshot({ path: 'character-edit-error.png', fullPage: true });
      }
      
      expect(response?.status()).toBe(200);
      
    } catch (error) {
      console.error('‚ùå Á∑®ÈõÜ„ÉÜ„Çπ„Éà„Ç®„É©„Éº:', error);
      // „Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà„ÅØ„Ç®„É©„ÉºÁÆáÊâÄ„ÅßÁõ¥Êé•‰øùÂ≠ò
      throw error;
    } finally {
      await context.close();
    }
  });

  test('„Ç≠„É£„É©„ÇØ„Çø„Éº„ÅÆÂâäÈô§', async ({ browser }) => {
    const context = await browser.newContext();
    const page = await context.newPage();
    let newPage; // „Çπ„Ç≥„Éº„Éó„ÇíÂ∫É„Åí„Çã
    
    console.log('üóëÔ∏è „Ç≠„É£„É©„ÇØ„Çø„ÉºÂâäÈô§„ÉÜ„Çπ„ÉàÈñãÂßã');
    
    try {
      // „É≠„Ç∞„Ç§„É≥
      await page.goto('/admin/login');
      await page.waitForLoadState('networkidle');
      await page.fill('input[type="email"]', adminEmail);
      await page.fill('input[type="password"]', adminPassword);
      await page.click('button[type="submit"]');
      
      // „ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Å∏„ÅÆÈÅ∑Áßª„ÇíÂæÖ„Å§
      await page.waitForURL('**/admin/dashboard', { timeout: 15000 });
      await page.waitForTimeout(5000);
      await page.close();
      
      // Êñ∞„Åó„ÅÑ„Éö„Éº„Ç∏„Åß„Ç≠„É£„É©„ÇØ„Çø„ÉºÁÆ°ÁêÜ„Éö„Éº„Ç∏„ÇíÈñã„Åè
      newPage = await context.newPage();
      await newPage.goto('/admin/characters');
      await newPage.waitForLoadState('networkidle');
      await newPage.waitForTimeout(3000);
      
      // „Ç≠„É£„É©„ÇØ„Çø„ÉºË°å„ÇíÂèñÂæó
      const characterRows = await newPage.locator('tbody tr, .character-row, [data-testid="character-item"]').all();
      const rowCount = characterRows.length;
      console.log(`üìä „Ç≠„É£„É©„ÇØ„Çø„ÉºÊï∞: ${rowCount}`);
      
      if (rowCount === 0) {
        console.log('‚ö†Ô∏è ÂâäÈô§„Åß„Åç„Çã„Ç≠„É£„É©„ÇØ„Çø„Éº„Åå„ÅÇ„Çä„Åæ„Åõ„Çì');
        // „ÉÜ„Çπ„Éà„Çí„Çπ„Ç≠„ÉÉ„Éó
        return;
      }
      
      // „ÉÜ„Çπ„ÉàÁî®„Å´‰ΩúÊàê„Åï„Çå„Åü„Ç≠„É£„É©„ÇØ„Çø„Éº„ÇíÊé¢„Åô
      let targetRow = null;
      let characterName = '';
      
      // „ÉÜ„Çπ„ÉàÈñ¢ÈÄ£„ÅÆÂêçÂâç„ÇíÊåÅ„Å§„Ç≠„É£„É©„ÇØ„Çø„Éº„ÇíÊé¢„Åô
      for (const row of characterRows) {
        const nameCell = await row.locator('td:first-child, .character-name').textContent();
        if (nameCell && (nameCell.includes('„ÉÜ„Çπ„Éà') || nameCell.includes('Test') || nameCell.includes('Á∑®Èõà'))) {
          targetRow = row;
          characterName = nameCell;
          console.log(`üéØ ÂâäÈô§ÂØæË±°: ${characterName}`);
          break;
        }
      }
      
      // „ÉÜ„Çπ„ÉàÁî®„Ç≠„É£„É©„ÇØ„Çø„Éº„ÅåË¶ã„Å§„Åã„Çâ„Å™„ÅÑÂ†¥Âêà„ÄÅÊúÄÂæå„ÅÆ„Ç≠„É£„É©„ÇØ„Çø„Éº„Çí‰ΩøÁî®
      if (!targetRow) {
        targetRow = characterRows[characterRows.length - 1];
        characterName = await targetRow.locator('td:first-child, .character-name').textContent() || '‰∏çÊòé';
        console.log(`üéØ ÊúÄÂæå„ÅÆ„Ç≠„É£„É©„ÇØ„Çø„Éº„ÇíÂâäÈô§: ${characterName}`);
      }
      
      // ÂâäÈô§„Éú„Çø„É≥„ÇíÊé¢„ÅôÔºà„Ç¥„ÉüÁÆ±„Ç¢„Ç§„Ç≥„É≥Ôºâ
      const deleteButtonSelectors = [
        'button[title*="ÂâäÈô§"]',
        'button svg[class*="trash"]',
        'button:has-text("ÂâäÈô§")',
        '[data-action="delete"]',
        '.delete-button'
      ];
      
      let deleteButton = null;
      for (const selector of deleteButtonSelectors) {
        const button = targetRow.locator(selector).first();
        if (await button.isVisible({ timeout: 1000 })) {
          deleteButton = button;
          console.log(`‚úÖ ÂâäÈô§„Éú„Çø„É≥Áô∫Ë¶ã: ${selector}`);
          break;
        }
      }
      
      if (!deleteButton) {
        throw new Error('ÂâäÈô§„Éú„Çø„É≥„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
      }
      
      // ÂâäÈô§„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ
      await deleteButton.click();
      console.log('‚úÖ ÂâäÈô§„Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØ');
      
      // Á¢∫Ë™ç„ÉÄ„Ç§„Ç¢„É≠„Ç∞„ÇíÂæÖ„Å§
      await newPage.waitForTimeout(1000);
      
      // „ÉÄ„Ç§„Ç¢„É≠„Ç∞„ÅÆË¶ÅÁ¥†„ÇíÊé¢„Åô
      const dialogSelectors = [
        '.confirm-dialog',
        '[role="dialog"]',
        '.modal',
        '[data-testid="confirm-dialog"]',
        '.delete-confirmation'
      ];
      
      let confirmDialog = null;
      for (const selector of dialogSelectors) {
        const dialog = newPage.locator(selector).first();
        if (await dialog.isVisible({ timeout: 1000 })) {
          confirmDialog = dialog;
          console.log(`‚úÖ Á¢∫Ë™ç„ÉÄ„Ç§„Ç¢„É≠„Ç∞Áô∫Ë¶ã: ${selector}`);
          break;
        }
      }
      
      if (confirmDialog) {
        // „ÉÄ„Ç§„Ç¢„É≠„Ç∞ÂÜÖ„ÅÆÁ¢∫Ë™ç„Éú„Çø„É≥„ÇíÊé¢„Åô
        const confirmButtonSelectors = [
          'button:has-text("ÂâäÈô§")',
          'button:has-text("Á¢∫Ë™ç")',
          'button:has-text("OK")',
          'button:has-text("„ÅØ„ÅÑ")',
          'button[data-action="confirm"]'
        ];
        
        // API„É¨„Çπ„Éù„É≥„Çπ„ÇíÁõ£Ë¶ñ
        const deleteResponsePromise = newPage.waitForResponse(
          response => response.url().includes('/api/v1/admin/characters') && response.request().method() === 'DELETE',
          { timeout: 10000 }
        ).catch(() => null);
        
        // „ÉÄ„Ç§„Ç¢„É≠„Ç∞ÂÜÖ„ÅÆ„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ
        let confirmClicked = false;
        for (const selector of confirmButtonSelectors) {
          const button = confirmDialog.locator(selector).last();
          if (await button.isVisible({ timeout: 1000 })) {
            await button.click();
            confirmClicked = true;
            console.log(`‚úÖ Á¢∫Ë™ç„Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØ: ${selector}`);
            break;
          }
        }
        
        if (!confirmClicked) {
          // „ÉÄ„Ç§„Ç¢„É≠„Ç∞Â§ñ„ÅÆÁ¢∫Ë™ç„Éú„Çø„É≥„ÇíÊé¢„Åô
          const globalConfirm = newPage.locator('button:has-text("ÂâäÈô§"), button:has-text("Á¢∫Ë™ç")').last();
          if (await globalConfirm.isVisible()) {
            await globalConfirm.click();
            console.log('‚úÖ „Ç∞„É≠„Éº„Éê„É´Á¢∫Ë™ç„Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØ');
          }
        }
        
        // API„É¨„Çπ„Éù„É≥„Çπ„ÇíÂæÖ„Å§
        const response = await deleteResponsePromise;
        if (response) {
          const status = response.status();
          console.log(`üì° API„É¨„Çπ„Éù„É≥„Çπ: ${status}`);
          expect(status).toBe(200);
        }
        
        // ÂâäÈô§Âæå„ÅÆÁ¢∫Ë™ç
        await newPage.waitForTimeout(2000);
        
        // „Ç≠„É£„É©„ÇØ„Çø„Éº„Åå„É™„Çπ„Éà„Åã„ÇâÊ∂à„Åà„Åü„Åì„Å®„ÇíÁ¢∫Ë™ç
        const deletedCharacter = newPage.locator(`text="${characterName}"`);
        const isDeleted = !(await deletedCharacter.isVisible({ timeout: 1000 }).catch(() => false));
        
        if (isDeleted) {
          console.log(`‚úÖ „Ç≠„É£„É©„ÇØ„Çø„Éº„Äå${characterName}„Äç„ÅåÊ≠£Â∏∏„Å´ÂâäÈô§„Åï„Çå„Åæ„Åó„Åü`);
        } else {
          console.log(`‚ö†Ô∏è „Ç≠„É£„É©„ÇØ„Çø„Éº„Äå${characterName}„Äç„Åå„Åæ„Å†Ë°®Á§∫„Åï„Çå„Å¶„ÅÑ„Åæ„Åô`);
        }
      } else {
        console.log('‚ö†Ô∏è Á¢∫Ë™ç„ÉÄ„Ç§„Ç¢„É≠„Ç∞„ÅåË°®Á§∫„Åï„Çå„Åæ„Åõ„Çì„Åß„Åó„Åü');
        // Áõ¥Êé•API„ÇíÂëº„Å∂ÂèØËÉΩÊÄß„ÇÇ„ÅÇ„Çã„ÅÆ„Åß„ÄÅ„É¨„Çπ„Éù„É≥„Çπ„ÇíÂæÖ„Å§
        await newPage.waitForTimeout(3000);
      }
      
    } catch (error) {
      console.error('‚ùå ÂâäÈô§„ÉÜ„Çπ„Éà„Ç®„É©„Éº:', error);
      // „Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà„ÅØ„Ç®„É©„ÉºÁÆáÊâÄ„ÅßÁõ¥Êé•‰øùÂ≠ò
      throw error;
    } finally {
      await context.close();
    }
  });

  test.skip('„Ç≠„É£„É©„ÇØ„Çø„Éº„ÅÆ„Çπ„ÉÜ„Éº„Çø„ÇπÁÆ°ÁêÜ', async ({ browser }) => {
    // „Çπ„ÉÜ„Éº„Çø„ÇπÁÆ°ÁêÜÊ©üËÉΩ„ÅåÂÆüË£Ö„Åï„Çå„Åü„ÇâÊúâÂäπÂåñ
    const context = await browser.newContext();
    const page = await context.newPage();
    
    // „É≠„Ç∞„Ç§„É≥
    await page.goto('/admin/login');
    await page.waitForLoadState('networkidle');
    await page.fill('input[type="email"]', adminEmail);
    await page.fill('input[type="password"]', adminPassword);
    await page.click('button[type="submit"]');
    
    // „ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Å∏„ÅÆÈÅ∑Áßª„ÇíÂæÖ„Å§
    await page.waitForURL('**/admin/dashboard', { timeout: 15000 });
    await page.waitForTimeout(5000);
    await page.close();
    
    // Êñ∞„Åó„ÅÑ„Éö„Éº„Ç∏„Åß„Ç≠„É£„É©„ÇØ„Çø„ÉºÁÆ°ÁêÜ„Éö„Éº„Ç∏„ÇíÈñã„Åè
    const newPage = await context.newPage();
    await newPage.goto('/admin/characters');
    await newPage.waitForLoadState('networkidle');
    
    // „Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Å™„Ç≠„É£„É©„ÇØ„Çø„Éº„ÇíÊé¢„Åô
    const activeRow = newPage.locator('tr:has-text("ÂÖ¨Èñã‰∏≠"), tr:has-text("Active"), tr:has(.status-active)').first();
    
    if (await activeRow.isVisible()) {
      const characterName = await activeRow.locator('td:first-child').textContent();
      
      // ÈùûÂÖ¨Èñã„Å´„Åô„Çã
      const toggleButton = activeRow.locator('button:has-text("ÈùûÂÖ¨Èñã„Å´„Åô„Çã"), .status-toggle');
      await toggleButton.click();
      
      // Á¢∫Ë™ç„ÉÄ„Ç§„Ç¢„É≠„Ç∞„ÅÆÂá¶ÁêÜ
      const confirmDialog = newPage.locator('.confirm-dialog');
      if (await confirmDialog.isVisible({ timeout: 1000 })) {
        await newPage.locator('button:has-text("Á¢∫Ë™ç")').click();
      }
      
      // „Çπ„ÉÜ„Éº„Çø„Çπ„ÅåÂ§âÊõ¥„Åï„Çå„Åü„Åì„Å®„ÇíÁ¢∫Ë™ç
      await newPage.waitForTimeout(1000);
      await expect(activeRow).toContainText('ÈùûÂÖ¨Èñã');
      
      // ÂÜçÂ∫¶ÂÖ¨Èñã„Åô„Çã
      const publishButton = activeRow.locator('button:has-text("ÂÖ¨Èñã„Åô„Çã"), .status-toggle');
      await publishButton.click();
      
      if (await confirmDialog.isVisible({ timeout: 1000 })) {
        await newPage.locator('button:has-text("Á¢∫Ë™ç")').click();
      }
      
      console.log(`„Ç≠„É£„É©„ÇØ„Çø„Éº„Äå${characterName}„Äç„ÅÆ„Çπ„ÉÜ„Éº„Çø„ÇπÂàá„ÇäÊõø„Åà„ÅåÊ≠£Â∏∏„Å´Âãï‰Ωú„Åó„Åæ„Åó„Åü`);
    }
    
    await context.close();
  });

  test('„Ç≠„É£„É©„ÇØ„Çø„ÉºÁîªÂÉè„ÅÆÁÆ°ÁêÜ', async ({ browser }) => {
    const context = await browser.newContext();
    const page = await context.newPage();
    let newPage; // „Çπ„Ç≥„Éº„Éó„ÇíÂ∫É„Åí„Çã
    
    try {
      // „É≠„Ç∞„Ç§„É≥
      await page.goto('/admin/login');
    await page.waitForLoadState('networkidle');
    await page.fill('input[type="email"]', adminEmail);
    await page.fill('input[type="password"]', adminPassword);
    await page.click('button[type="submit"]');
    
    // „ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Å∏„ÅÆÈÅ∑Áßª„ÇíÂæÖ„Å§
    await page.waitForURL('**/admin/dashboard', { timeout: 15000 });
    await page.waitForTimeout(5000);
    await page.close();
    
    // Êñ∞„Åó„ÅÑ„Éö„Éº„Ç∏„Åß„Ç≠„É£„É©„ÇØ„Çø„ÉºÁÆ°ÁêÜ„Éö„Éº„Ç∏„ÇíÈñã„Åè
    const newPage = await context.newPage();
    await newPage.goto('/admin/characters');
    await newPage.waitForLoadState('networkidle');
    
    // Á∑®ÈõÜ„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ
    await newPage.locator('button:has-text("Á∑®ÈõÜ")').first().click();
    
    // ÁîªÂÉèÁÆ°ÁêÜ„Çª„ÇØ„Ç∑„Éß„É≥„ÇíÊé¢„Åô
    // „ÇÆ„É£„É©„É™„ÉºÁîªÂÉè„Çª„ÇØ„Ç∑„Éß„É≥„ÇíÊé¢„Åô
    const gallerySection = await newPage.locator('h3:has-text("„ÇÆ„É£„É©„É™„ÉºÁîªÂÉè")').isVisible();
    
    if (gallerySection) {
      console.log('‚úÖ „ÇÆ„É£„É©„É™„ÉºÁîªÂÉè„Çª„ÇØ„Ç∑„Éß„É≥„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åó„Åü');
      
      // ÂêÑ„É¨„Éô„É´„ÅÆÁîªÂÉè„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Éï„Ç£„Éº„É´„Éâ„ÇíÁ¢∫Ë™ç
      const levels = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100];
      
      for (let i = 0; i < levels.length; i++) {
        const level = levels[i];
        const uploadInput = newPage.locator(`#gallery-upload-${i}`);
        const titleInput = uploadInput.locator('xpath=../following-sibling::div//input[placeholder="ÁîªÂÉè„Çø„Ç§„Éà„É´"]').first();
        const descriptionTextarea = uploadInput.locator('xpath=../following-sibling::div//textarea[placeholder="ÁîªÂÉèË™¨Êòé"]').first();
        
        if (await uploadInput.count() > 0) {
          console.log(`‚úÖ „É¨„Éô„É´${level}„ÅÆÁîªÂÉè„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ: Â≠òÂú®`);
          
          // ÂêÑ„É¨„Éô„É´„ÅÆÊÉÖÂ†±„ÇíË°®Á§∫
          const levelHeader = newPage.locator(`h4:has-text("Ëß£Êîæ„É¨„Éô„É´ ${level}")`).first();
          if (await levelHeader.isVisible()) {
            const levelInfo = await levelHeader.locator('xpath=../span').textContent();
            console.log(`  - ${levelInfo}`);
          }
        }
      }
      
      // „Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÂèØËÉΩÊûöÊï∞„ÅÆÁ¢∫Ë™ç
      const totalSlots = await newPage.locator('input[type="file"][id^="gallery-upload-"]').count();
      console.log(`\nüìä ÁîªÂÉè„Ç¢„ÉÉ„Éó„É≠„Éº„ÉâÁµ±Ë®à:`);
      console.log(`- Á∑è„Çπ„É≠„ÉÉ„ÉàÊï∞: ${totalSlots}`);
      console.log(`- Ë¶™ÂØÜÂ∫¶„É¨„Éô„É´ÁØÑÂõ≤: 0-100`);
      console.log(`- Ëß£ÊîæÈñìÈöî: 10„É¨„Éô„É´„Åî„Å®`);
      
      // ÂÆüÈöõ„Å´„Éï„Ç°„Ç§„É´„Çí„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åô„ÇãÂ†¥Âêà„ÅÆ„ÉÜ„Çπ„ÉàÔºà„Ç≥„É°„É≥„Éà„Ç¢„Ç¶„ÉàÔºâ
      // const testImagePath = path.join(__dirname, 'test-assets', 'test-character.jpg');
      // if (fs.existsSync(testImagePath)) {
      //   await newPage.locator('#gallery-upload-0').setInputFiles(testImagePath);
      //   console.log('‚úÖ „ÉÜ„Çπ„ÉàÁîªÂÉè„Çí„É¨„Éô„É´10„Å´„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ');
      // }
    } else {
      console.log('‚ö†Ô∏è „ÇÆ„É£„É©„É™„ÉºÁîªÂÉè„Çª„ÇØ„Ç∑„Éß„É≥„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
      // Á∑®ÈõÜÁîªÈù¢„Åß„ÅØ„Å™„ÅÑÂèØËÉΩÊÄß„Åå„ÅÇ„Çã„Åü„ÇÅ„ÄÅÊñ∞Ë¶è‰ΩúÊàêÁîªÈù¢„Å´ÈÅ∑Áßª
      await newPage.goto('/admin/characters/new');
      await newPage.waitForLoadState('networkidle');
      await newPage.waitForTimeout(2000);
      
      // ÂÜçÂ∫¶Á¢∫Ë™ç
      const galleryInNew = await newPage.locator('h3:has-text("„ÇÆ„É£„É©„É™„ÉºÁîªÂÉè")').isVisible();
      if (galleryInNew) {
        console.log('‚úÖ Êñ∞Ë¶è‰ΩúÊàêÁîªÈù¢„Åß„ÇÆ„É£„É©„É™„ÉºÁîªÂÉè„Çª„ÇØ„Ç∑„Éß„É≥„ÇíÁ¢∫Ë™ç');
        
        // ÁîªÂÉè„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Éï„Ç£„Éº„É´„Éâ„ÅÆÁ∑èÊï∞„ÇíÁ¢∫Ë™ç
        const totalUploads = await newPage.locator('input[type="file"][id^="gallery-upload-"]').count();
        console.log(`- ÁîªÂÉè„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Éï„Ç£„Éº„É´„ÉâÊï∞: ${totalUploads}ÂÄã`);
        
        // ÂêÑ„Éï„Ç£„Éº„É´„Éâ„ÅÆË©≥Á¥∞
        for (let i = 0; i < totalUploads; i++) {
          const levelText = await newPage.locator(`h4:has-text("Ëß£Êîæ„É¨„Éô„É´ ${(i + 1) * 10}")`).textContent();
          console.log(`  ${i + 1}. ${levelText}`);
        }
      }
    }
    } catch (error) {
      console.error('‚ùå ÁîªÂÉèÁÆ°ÁêÜ„ÉÜ„Çπ„Éà„Ç®„É©„Éº:', error);
      throw error;
    } finally {
      await context.close();
    }
  });

  test.skip('„Ç≠„É£„É©„ÇØ„Çø„Éº„ÅÆ‰∏ÄÊã¨Êìç‰Ωú', async ({ browser }) => {
    const context = await browser.newContext();
    const page = await context.newPage();
    
    // „É≠„Ç∞„Ç§„É≥
    await page.goto('/admin/login');
    await page.waitForLoadState('networkidle');
    await page.fill('input[type="email"]', adminEmail);
    await page.fill('input[type="password"]', adminPassword);
    await page.click('button[type="submit"]');
    
    // „ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Å∏„ÅÆÈÅ∑Áßª„ÇíÂæÖ„Å§
    await page.waitForURL('**/admin/dashboard', { timeout: 15000 });
    await page.waitForTimeout(5000);
    await page.close();
    
    // Êñ∞„Åó„ÅÑ„Éö„Éº„Ç∏„Åß„Ç≠„É£„É©„ÇØ„Çø„ÉºÁÆ°ÁêÜ„Éö„Éº„Ç∏„ÇíÈñã„Åè
    const newPage = await context.newPage();
    await newPage.goto('/admin/characters');
    await newPage.waitForLoadState('networkidle');
    
    // „ÉÅ„Çß„ÉÉ„ÇØ„Éú„ÉÉ„ÇØ„Çπ„ÅßË§áÊï∞ÈÅ∏Êäû
    const checkboxes = newPage.locator('input[type="checkbox"][name="characterIds"], .character-checkbox');
    
    if (await checkboxes.first().isVisible()) {
      // 2„Å§„ÅÆ„Ç≠„É£„É©„ÇØ„Çø„Éº„ÇíÈÅ∏Êäû
      await checkboxes.nth(0).check();
      await checkboxes.nth(1).check();
      
      // ‰∏ÄÊã¨Êìç‰Ωú„É°„Éã„É•„Éº„ÅÆË°®Á§∫
      const bulkActions = newPage.locator('.bulk-actions, select[name="bulkAction"]');
      await expect(bulkActions).toBeVisible();
      
      // ‰∏ÄÊã¨ÈùûÂÖ¨Èñã„ÅÆ„ÉÜ„Çπ„Éà
      if (await newPage.locator('option[value="unpublish"]').isVisible()) {
        await bulkActions.selectOption('unpublish');
        
        // ÂÆüË°å„Éú„Çø„É≥
        await newPage.locator('button:has-text("ÂÆüË°å")').click();
        
        // Á¢∫Ë™ç„ÉÄ„Ç§„Ç¢„É≠„Ç∞
        const confirmDialog = newPage.locator('.confirm-dialog');
        if (await confirmDialog.isVisible()) {
          await newPage.locator('button:has-text("Á¢∫Ë™ç")').click();
        }
        
        console.log('‰∏ÄÊã¨Êìç‰ΩúÔºàÈùûÂÖ¨ÈñãÔºâ„ÅåÂÆüË°å„Åï„Çå„Åæ„Åó„Åü');
      }
    }
    
    await context.close();
  });

  test.skip('„Ç≠„É£„É©„ÇØ„Çø„ÉºÊ§úÁ¥¢„Å®„Éï„Ç£„É´„Çø„É™„É≥„Ç∞', async ({ browser }) => {
    // Ê§úÁ¥¢„Éª„Éï„Ç£„É´„Çø„ÉºÊ©üËÉΩ„ÅåÂÆüË£Ö„Åï„Çå„Åü„ÇâÊúâÂäπÂåñ
    const context = await browser.newContext();
    const page = await context.newPage();
    
    // „É≠„Ç∞„Ç§„É≥
    await page.goto('/admin/login');
    await page.waitForLoadState('networkidle');
    await page.fill('input[type="email"]', adminEmail);
    await page.fill('input[type="password"]', adminPassword);
    await page.click('button[type="submit"]');
    
    // „ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Å∏„ÅÆÈÅ∑Áßª„ÇíÂæÖ„Å§
    await page.waitForURL('**/admin/dashboard', { timeout: 15000 });
    await page.waitForTimeout(5000);
    await page.close();
    
    // Êñ∞„Åó„ÅÑ„Éö„Éº„Ç∏„Åß„Ç≠„É£„É©„ÇØ„Çø„ÉºÁÆ°ÁêÜ„Éö„Éº„Ç∏„ÇíÈñã„Åè
    const newPage = await context.newPage();
    await newPage.goto('/admin/characters');
    await newPage.waitForLoadState('networkidle');
    
    // Ê§úÁ¥¢Ê©üËÉΩ
    const searchInput = newPage.locator('input[placeholder*="Ê§úÁ¥¢"], input[type="search"]');
    if (await searchInput.isVisible()) {
      await searchInput.fill('„ÉÜ„Çπ„Éà');
      await newPage.waitForTimeout(500); // „Éá„Éê„Ç¶„É≥„ÇπÂæÖÊ©ü
      
      // Ê§úÁ¥¢ÁµêÊûú„ÅÆÁ¢∫Ë™ç
      const results = newPage.locator('tbody tr, .character-row');
      const resultCount = await results.count();
      console.log(`Ê§úÁ¥¢ÁµêÊûú: ${resultCount}‰ª∂`);
    }
    
    // „Éï„Ç£„É´„Çø„É™„É≥„Ç∞Ôºà‰æ°Ê†º„Çø„Ç§„ÉóÔºâ
    const priceFilter = newPage.locator('select[name="priceType"], input[name="filterPriceType"]');
    if (await priceFilter.first().isVisible()) {
      // ÊúâÊñô„ÅÆ„ÅøË°®Á§∫
      await newPage.locator('[value="paid"]').click();
      await newPage.waitForTimeout(500);
      
      // ÁÑ°Êñô„ÅÆ„ÅøË°®Á§∫
      await newPage.locator('[value="free"]').click();
      await newPage.waitForTimeout(500);
    }
    
    // „Çπ„ÉÜ„Éº„Çø„Çπ„Éï„Ç£„É´„Çø„Éº
    const statusFilter = newPage.locator('select[name="status"], input[name="filterStatus"]');
    if (await statusFilter.first().isVisible()) {
      // ÂÖ¨Èñã‰∏≠„ÅÆ„Åø
      await newPage.locator('[value="active"]').click();
      await newPage.waitForTimeout(500);
    }
    
    await context.close();
  });
});